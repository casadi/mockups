#ifndef GUROBI_H
#define GUROBI_H

#ifdef __cplusplus
extern "C" {
#endif


#include <stdio.h>

typedef struct _GRBbatch GRBbatch;
typedef struct _GRBmodel GRBmodel;
typedef struct _GRBenv GRBenv;

#if defined(_WIN64) && !defined(WIN64)
#define WIN64
#endif

#if defined(_WIN32) && !defined(_WIN64) && !defined(WIN32)
#define WIN32
#endif

#if !defined(WIN32) && !defined(WIN64)
#define __cdecl
#define __stdcall
#endif

#ifdef _WIN32
    #ifdef DLL_IMPLEMENTATION
    #define DLLSYMBOL __declspec( dllexport )
    #else
    #define DLLSYMBOL __declspec( dllimport ) extern
    #endif
#else
    #ifdef DLL_IMPLEMENTATION
    #define DLLSYMBOL 
    #else
    #define DLLSYMBOL extern
    #endif
#endif

#define GRB_CONTINUOUS 'C'
#define GRB_BINARY     'B'
#define GRB_INTEGER    'I'
#define GRB_SEMICONT   'S'
#define GRB_SEMIINT    'N'

#define GRB_LOADED          1
#define GRB_OPTIMAL         2
#define GRB_INFEASIBLE      3
#define GRB_INF_OR_UNBD     4
#define GRB_UNBOUNDED       5
#define GRB_CUTOFF          6
#define GRB_ITERATION_LIMIT 7
#define GRB_NODE_LIMIT      8
#define GRB_TIME_LIMIT      9
#define GRB_SOLUTION_LIMIT 10
#define GRB_INTERRUPTED    11
#define GRB_NUMERIC        12
#define GRB_SUBOPTIMAL     13
#define GRB_INPROGRESS     14
#define GRB_USER_OBJ_LIMIT 15

#define GRB_DBL_ATTR_X         "X"
#define GRB_DBL_ATTR_XN        "Xn"
#define GRB_DBL_ATTR_BARX      "BarX"
#define GRB_DBL_ATTR_RC        "RC"
#define GRB_DBL_ATTR_VDUALNORM "VDualNorm"
#define GRB_INT_ATTR_VBASIS    "VBasis"

#define GRB_DBL_ATTR_PI        "Pi"
#define GRB_DBL_ATTR_QCPI      "QCPi"
#define GRB_DBL_ATTR_SLACK     "Slack"
#define GRB_DBL_ATTR_QCSLACK   "QCSlack"
#define GRB_DBL_ATTR_CDUALNORM "CDualNorm"
#define GRB_INT_ATTR_CBASIS    "CBasis"

[gurobi_core.h]

#ifdef __cplusplus
}
#endif

#endif // GUROBI_H
