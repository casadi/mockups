name: CMake

on: push

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TAG: win64_vs2017

jobs:
  build-dockcross:
    runs-on: ubuntu-20.04
    env:
      arch: manylinux1-x64
      BUILD_TYPE: Release
    strategy:
      matrix:
        arch: ["manylinux1-x64"]
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0 # for git-restore-mtime
      - name: Setup dockcross
        run: |
          docker pull dockcross/${{ matrix.arch }}:latest
          docker run --rm dockcross/${{ matrix.arch }}:latest > dockcross
          chmod +x dockcross
      - name: Build
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          ./dockcross cmake -B /work/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON -DCMAKE_INSTALL_PREFIX=/work/install
          ./dockcross cmake --build /work/build --target install --config ${{env.BUILD_TYPE}}

      - name: Easy Zip Files
        uses: vimtor/action-zip@v1
        with:
          files: install/
          recursive: false
          dest: ${{github.workspace}}/mockups-${{matrix.arch}}-${{env.TAG}}.zip

      - uses: actions/upload-artifact@v2.2.4
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          name: artifacts
          path: ${{github.workspace}}/mockups-${{matrix.arch}}-${{env.TAG}}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files:  ${{github.workspace}}/mockups-${{matrix.arch}}-${{env.TAG}}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    - name: Build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cd matlab
        cmake -B ${{github.workspace}}/build -G "Visual Studio 15 2017" -A x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
        cmake --build ${{github.workspace}}/build --target install --config ${{env.BUILD_TYPE}}
        cd ..
      
    - name: zip
      run: 7z a ${{github.workspace}}/mockups_${{env.TAG}}.zip ${{github.workspace}}/install/*

    - uses: actions/upload-artifact@v2.2.4
      if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
      with:
        name: artifacts
        path: ${{github.workspace}}/mockups_${{env.TAG}}.zip
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files:  ${{github.workspace}}/mockups_${{env.TAG}}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
